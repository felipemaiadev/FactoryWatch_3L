// <auto-generated />
using System;
using MaiaIO.FactoryWatch.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaiaIO.FactoryWatch.Infra.Migrations
{
    [DbContext(typeof(BaseContext))]
    partial class BaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaiaIO.FactoryWatch.Domain.Entities.Device", b =>
                {
                    b.Property<int>("vendor")
                        .HasColumnType("int");

                    b.Property<string>("codeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MachinecodeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("device")
                        .HasColumnType("int");

                    b.Property<DateTime>("installStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("vendor", "codeId");

                    b.HasIndex("MachinecodeId");

                    b.ToTable("Devices", (string)null);
                });

            modelBuilder.Entity("MaiaIO.FactoryWatch.Domain.Entities.Machine", b =>
                {
                    b.Property<string>("codeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ProcessLinelineCode")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessLinelineSeq")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lastMaintece")
                        .HasColumnType("datetime2");

                    b.Property<int>("lastMainteceCode")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codeId");

                    b.HasIndex("ProcessLinelineCode", "ProcessLinelineSeq");

                    b.ToTable("Machines", (string)null);
                });

            modelBuilder.Entity("MaiaIO.FactoryWatch.Domain.Entities.ProcessLine", b =>
                {
                    b.Property<int>("lineCode")
                        .HasColumnType("int");

                    b.Property<int>("lineSeq")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lastMainteceCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastMaintence")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lineCode", "lineSeq");

                    b.ToTable("ProcessLines", (string)null);
                });

            modelBuilder.Entity("MaiaIO.FactoryWatch.Domain.Entities.Device", b =>
                {
                    b.HasOne("MaiaIO.FactoryWatch.Domain.Entities.Machine", null)
                        .WithMany("devices")
                        .HasForeignKey("MachinecodeId");
                });

            modelBuilder.Entity("MaiaIO.FactoryWatch.Domain.Entities.Machine", b =>
                {
                    b.HasOne("MaiaIO.FactoryWatch.Domain.Entities.ProcessLine", null)
                        .WithMany("machines")
                        .HasForeignKey("ProcessLinelineCode", "ProcessLinelineSeq");
                });

            modelBuilder.Entity("MaiaIO.FactoryWatch.Domain.Entities.Machine", b =>
                {
                    b.Navigation("devices");
                });

            modelBuilder.Entity("MaiaIO.FactoryWatch.Domain.Entities.ProcessLine", b =>
                {
                    b.Navigation("machines");
                });
#pragma warning restore 612, 618
        }
    }
}
